buildscript {
    repositories {
        maven {
            name = ":forge"
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


def buildnumber = System.getenv("BUILD_NUMBER")
def travisbuildnumber = (System.getenv("TRAVIS_BUILD_NUMBER") ?: -000).toInteger() + 00
version = "${mod_version}.${buildnumber ?: travisbuildnumber}"
group = group_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_id}-${minecraft_version}"

def numina_version = (System.getenv("NUMINA_VERSION") ?: "${version}")

repositories {
    //url                                                           //dependencies
    maven { url "http://dvs1.progwml6.com/files/maven" }            //JEI
    maven { url = "http://maven.covers1624.net/" }                  //CoFH
    maven { url = "http://maven.ic2.player.to" }                    //IC2 Forestry
    maven { url = "http://maven.tterrag.com" }                      //EnderIO
    maven { url = "http://maven2.tterrag.com" }                     //EnderIO
    maven { url = 'http://maven.mcmoddev.com' }                     //TESLA API
    maven { url = 'https://mod-buildcraft.com/maven/' }             //BuildCraft
    maven { url = 'http://maven.cil.li/' }                          //Scannable
    maven { url = "https://repo.refinedmods.com" }                  //RefinedStorage
    maven { url = 'http://maven.thiakil.com/' }                     //Mekanism
    maven { url = "http://maven.blamejared.com" }                   //CraftTweaker - required by Mekanism
    maven { url = 'https://minecraft.curseforge.com/api/maven/' }   //Thaumcraft
    mavenCentral()
}
/*
buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }

        maven {
            url 'https://mvnrepository.com/artifact/org.json/json'
        }

        maven {
            url 'https://mvnrepository.com/artifact/com.codesnippets4all/quick-json'
        }

        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
}
*/

minecraft {
    mappings channel: "snapshot", version: "${project.mcp_version}".toString()
    accessTransformer = file('src/main/resources/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}


dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])

    compileOnly fg.deobf( "mezz.jei:jei_${minecraft_version}:${jei_version}")                             // JEI
    compileOnly fg.deobf( "cofh:RedstoneFlux:1.12-${rf_version}:universal")                                   // RF API

    compile ("cofh:CoFHCore:${minecraft_version}-${cofhcore_version}:universal")                 //CoFH Core
            { exclude group: 'mezz.jei' }//also using old outdated JEI reference


//    compile "com.enderio.core:EnderCore:${minecraft_version}-${endercore_version}"              //Ender Core
//    compileOnly "com.enderio.core:EnderCore:${minecraft_version}-${endercore_version}-core"              //Ender Core
    compileOnly fg.deobf( "appeng:appliedenergistics2:${ae2api_version}")                                     //Applied Energetics 2
    compileOnly fg.deobf( "net.industrial-craft:industrialcraft-2:${ic2_version}-ex112")                   //IC2 API
    compileOnly fg.deobf( "net.sengir.forestry:forestry_${minecraft_version}:${forestry_version}")            //Forestry

    // using compile because can't get deobf to work with Thaumcraft
    compile "thaumcraft:Thaumcraft:1.12.2:${thaumcraft_version}"                             //Thaumcraft

    compileOnly fg.deobf("refinedstorage:refinedstorage:${refinedstorage_version}") //Refined Storage

    compile "net.darkhax.tesla:Tesla-${minecraft_version}:${tesla_version}"                         //Tesla
    compile "com.mod-buildcraft:buildcraft:${buildcraft_version}"                                   //BuildCraft
    compile "li.cil.scannable:Scannable:MC${minecraft_version}-${scannable_version}"                //Scannable

//    compileOnly("mekanism:Mekanism:${minecraft_version}-${mekanism_version}")                           //Mekanism
//            { exclude group: 'mezz.jei' }//Mek has implemented a duplicated and out date JEI

//    compileOnly ("com.enderio:EnderIO:${minecraft_version}-${enderio_version}")

//    compileOnly ("com.enderio:EnderIO:${minecraft_version}-${enderio_version}:api")                 //EnderIO API
//            { exclude group: "deobf.com.enderio.core"}//Another duplicated and (dirty words) dependency

    //in fact,if you want run with EnderIO,you had to manually add EnderCore and EnderIO to your run/mods
    //or you can help to add some lines below that can help the "runClient" works properly while also load EnderIO

    compile group: 'com.google.guava', name: 'guava', version: '22.0'

    //we need baubles at runtime
    runtime "com.azanor:Baubles:${baubles_runtime_version}"

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20180813' // probably get rid of this
    compile group: 'com.codesnippets4all', name: 'quick-json', version: '1.0.4'

//    compile fileTree(dir: '/libs', include: 'RenderPlayerAPI-1.12.1-1.0.jar')                    //RenderPlayerAPI
//    compile fileTree(dir: '/libs', include: 'ExtraCells-1.12.2-2.6.1a.jar')                      //ExtraCells

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": "MachineMuse",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"MachineMuse",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Process resources on build
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft_version
    }

    // Move access transformers to META-INF
    rename '(accesstransformer.cfg)', 'META-INF/$1'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}


// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
